name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Clean npm cache and update PATH
      run: |
        npm cache clean --force
        echo "$HOME/.npm-global/bin" >> $GITHUB_PATH

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'pnpm'

    - name: Install pnpm via official script
      run: |
        curl -fsSL https://get.pnpm.io/install.sh | sh -
        export PATH="$HOME/.local/share/pnpm:$PATH"
        echo "$HOME/.local/share/pnpm" >> $GITHUB_PATH

    - name: Debug pnpm install
      run: |
        echo $PATH
        which pnpm || true
        pnpm --version || true

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Generate Prisma Client
      run: pnpm prisma generate
    
    - name: Run linting
      run: pnpm run lint
    
    - name: Run tests with coverage
      run: pnpm run test:coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.VERCEL_CODECOV_TOKEN }}
      with:
        token: ${{ secrets.VERCEL_CODECOV_TOKEN }}
        fail_ci_if_error: false
        directory: ./coverage
        flags: unittests
        name: codecov-umbrella
        verbose: true
        slug: Nadavlistingsync/AI
        env_vars: NODE_ENV
        files: ./coverage/coverage-final.json 